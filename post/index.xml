<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Offliner&#39;s Blog</title>
    <link>https://Offliners.github.io/post/</link>
    <description>Recent content in Posts on Offliner&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 01 Apr 2021 01:31:05 +0800</lastBuildDate><atom:link href="https://Offliners.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ORBSLAM2 Build on Windows 10</title>
      <link>https://Offliners.github.io/post/orbslam2-build/</link>
      <pubDate>Thu, 01 Apr 2021 01:31:05 +0800</pubDate>
      
      <guid>https://Offliners.github.io/post/orbslam2-build/</guid>
      <description>測試環境    Name Version     Windows 10 x64   OpenCV 3.4.1   Visual Studio 2015   CMake 3.20     OpenCV : Install Link Visual Studio 2015 : Install Link CMake : Install Link  記得將YOUR_OWN_PATH\opencv\build\x64\vc14\bin與YOUR_OWN_PATH\opencv\build新增至環境變數中，資料夾路徑視OpenCV的安裝目錄而定
安裝ORBSLAM2 for Windows 下載 ORBSLAM2 Download : Link
安裝DBoW2 使用Cmake-gui將Source code路徑選.\orbslam-windows\Thirdparty\DBoW2，而binaries選擇.\orbslam-windows\Thirdparty\DBoW2\build，若沒有build資料夾程式可以自動建立
接著按Configure選擇Visual Studio 14 2015，平台選擇x64或是你的作業系統而定
按下finish開始編譯，Configuring done後選擇Generate，等Generating done後按Open Project開啟VS
進入Visual Studio 2015後，先將Mode選擇Release，接著對DBoW2按右鍵選擇Properties，將Target Extension的.dll改成.lib，還有Configuration Type改成Static library(.</description>
    </item>
    
    <item>
      <title>[110學年度] 台清交推甄心得</title>
      <link>https://Offliners.github.io/post/110%E5%AD%B8%E5%B9%B4%E5%BA%A6-%E5%8F%B0%E6%B8%85%E4%BA%A4%E6%8E%A8%E7%94%84%E5%BF%83%E5%BE%97/</link>
      <pubDate>Tue, 30 Mar 2021 22:23:42 +0800</pubDate>
      
      <guid>https://Offliners.github.io/post/110%E5%AD%B8%E5%B9%B4%E5%BA%A6-%E5%8F%B0%E6%B8%85%E4%BA%A4%E6%8E%A8%E7%94%84%E5%BF%83%E5%BE%97/</guid>
      <description>個人基本資料  學校 : 國立臺灣師範大學  主修 : 機電工程學系 雙主修 : 電機工程學系   在校成績 : 系排 2 (4%) 平均 GPA : 4.15 (學分數: 142) 社團經歷  第二屆機電營 美輔股 股員 第三屆機電營 場器股 股長 第四屆機電營 美輔股 培訓講師 第四屆機電營 場器股&amp;amp;課程股電路組 股長 機電工程系學會 家長股長 全校英語讀書會成果發表 第三名   教學助理經驗  程式設計 數位邏輯實驗 感測器原理與應用   實習  工業局 108 年度智慧機器人才培育 桃園協易機械 - 沖壓機械智能感測產學專案實習 桃園協易機械實習培訓 - LabVIEW講師    各系所申請人數與錄取人數  109學年度     系所 錄取人數 申請人數 錄取率     台大電機所甲組 20 110 18.</description>
    </item>
    
    <item>
      <title>Anaconda Virtual Environment Use tensorflow-gpu</title>
      <link>https://Offliners.github.io/post/anaconda-virtualenv-use-tensorflow-gpu/</link>
      <pubDate>Tue, 30 Mar 2021 22:19:35 +0800</pubDate>
      
      <guid>https://Offliners.github.io/post/anaconda-virtualenv-use-tensorflow-gpu/</guid>
      <description>測試環境 作業系統 : Window 10 64bit
顯卡 : NVIDIA Geforce GTX 1050
事前準備 1. 確認電腦是否有NVIDIA顯卡 可以從裝置管理員中顯示卡看電腦是否有NVIDIA顯卡
2. 查詢此顯卡的計算能力 可從此網址查詢到 : https://developer.nvidia.com/cuda-gpus
建議顯卡計算能力(Compute Capability) 大於3.5以上，使用tensorflow-gpu才會有明顯的成效
安裝步驟 1. 安裝Anaconda 到Anaconda官方網站下載 : https://www.anaconda.com/products/individual
安裝一直next過去就好
2. 打開Anaconda Prompt 3. 建立虛擬環境 在命令列輸入conda create -n test_env pip python=3.6，test_env是環境名稱，可以自己取，然後Python的版本是3.6
這裡輸入y
4. 進入虛擬環境 建立完成後，輸入activate test_env進入虛擬環境
當前方出現自己的環境名稱表示進入成功
5. 安裝tensorflow-gpu 輸入pip install tensorflow-gpu==1.13.1，安裝版本為1.13.1的tensorflow-gpu
6. 安裝 CUDA 10.0 進入此網站 : https://developer.nvidia.com/cuda-toolkit-archive
尋找CUDA 10.0並安裝
一直按下一步就安裝完成
確認是否有加入環境變數，在Window搜尋環境變數
CUDA安裝軟體基本上會自動填入路徑
安裝cuDNN 7.6.5 進入此網站 : https://developer.nvidia.com/rdp/cudnn-archive</description>
    </item>
    
    <item>
      <title>使用 Hugo 在 Github Pages 建立靜態網站</title>
      <link>https://Offliners.github.io/post/hugo-first/</link>
      <pubDate>Tue, 30 Mar 2021 21:19:31 +0800</pubDate>
      
      <guid>https://Offliners.github.io/post/hugo-first/</guid>
      <description>Hugo 簡介 Hugo 是使用Go語言編寫的靜態網頁生成器，基於Go語言開發，沒有像HTML5錯綜複雜的依賴關係。除此之外，還擁有活躍的社群提供多樣主題與完善的功能給使用者，支援多種類的前端語言，整體架構也靈活易懂，最大優點是編譯速度極快，建立網站時間平均不到1秒種，使用者修改時能即時預覽。
Hugo 安裝  MacOS &amp;amp; Linux  MacOS使用者可使用Homebrew安裝
brew install hugo  Window  Window使用者須視使用者環境下載適用的版本 https://github.com/gohugoio/hugo/releases 或者透過chocolatey安裝
choco install hugo -confirm 安裝好後再去設定環境變數，例如: C:\hugo，記得將hugo.exe放進此路徑資料夾中
Hugo 指令測試 安裝好後透過CMD輸入hugo version可查看版本
hugo v0.81.0-59D15C97 linux/amd64 BuildDate=2021-02-19T17:07:12Z VendorInfo=gohugoio 建立 Project 透過CMD輸入
hugo new site mysite 則會在此路徑下建立mysite的資料夾，mysite可換任意名稱 資料夾結構如下:
mysite/ │ ├── archetypes/ │ │ │ └─ default.md # 預設 markdown ├── content/ # 頁面、文章（markdown） ├── data/ # 資料庫 ├── layouts/ # 自定義的樣板 ├── static/ # 靜態資源 ├── themes/ # 網站的主題 └── config.</description>
    </item>
    
  </channel>
</rss>
